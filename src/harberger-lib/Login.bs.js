// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Css from "bs-css-emotion/src/Css.bs.js";
import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Styles from "../Styles.bs.js";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as RootProvider from "./RootProvider.bs.js";
import * as Web3Connectors from "./bindings/web3-react/Web3Connectors.bs.js";
import * as TorusConnector from "@web3-react/torus-connector";
import * as PortisConnector from "@web3-react/portis-connector";
import * as FortmaticConnector from "@web3-react/fortmatic-connector";
import * as WalletconnectConnector from "@web3-react/walletconnect-connector";

var mainnetRpcUrl = "https://mainnet.infura.io/v3/84842078b09946638c03157f83405213";

var portisKey = "1456ad21-b5a7-4364-9eba-e6237a7cc1e9";

var fortmaticKey = "pk_live_BE64CE1BB4A49C37";

var ConnectorConfig = {
  pollingInterval: 8000,
  mainnetRpcUrl: mainnetRpcUrl,
  goerliRpcUrl: "https://goerli.infura.io/v3/84842078b09946638c03157f83405213",
  portisKey: portisKey,
  fortmaticKey: fortmaticKey,
  squarelinkKey: "3904cdd1b675af615ca9"
};

var connectors = [
  {
    name: "MetaMask",
    connector: Web3Connectors.injected,
    img: "/img/wallet-icons/metamask.svg",
    connectionPhrase: "Connect to your MetaMask Wallet"
  },
  {
    name: "WalletConnect",
    connector: new WalletconnectConnector.WalletConnectConnector({
          rpc: {
            "1": mainnetRpcUrl
          },
          bridge: "https://bridge.walletconnect.org",
          qrcode: true,
          pollingInterval: 8000
        }),
    img: "/img/wallet-icons/walletConnect.svg",
    connectionPhrase: "Connect via WalletConnect"
  },
  {
    name: "Torus",
    connector: new TorusConnector.TorusConnector({
          chainId: 1
        }),
    img: "/img/wallet-icons/torus.svg",
    connectionPhrase: "Connect via Torus"
  },
  {
    name: "Portis",
    connector: new PortisConnector.PortisConnector({
          dAppId: portisKey,
          networks: [1]
        }),
    img: "/img/wallet-icons/portis.svg",
    connectionPhrase: "Connect via Portis"
  },
  {
    name: "Fortmatic",
    connector: new FortmaticConnector.FortmaticConnector({
          apiKey: fortmaticKey,
          chainId: 1
        }),
    img: "/img/wallet-icons/fortmatic.svg",
    connectionPhrase: "Connect via Fortmatic"
  }
];

function Login(Props) {
  var match = RootProvider.useActivateConnector(undefined);
  var activateConnector = match[1];
  return React.createElement("div", undefined, React.createElement("p", undefined, "Use one of the wallet providers below. ", React.createElement("small", undefined, "(Not sure where to go from here? ", React.createElement("a", {
                          href: "https://blog.wildcards.world/how-to-buy-a-wildcard-web3-ethereum/",
                          rel: "noopener noreferrer",
                          target: "_blank"
                        }, React.createElement("span", {
                              className: Styles.colorGreen
                            }, "Read this guide")), ")")), React.createElement("div", {
                  className: CssJs.style([
                        CssJs.display("grid"),
                        CssJs.gridTemplateColumns([{
                                NAME: "repeat",
                                VAL: [
                                  "autoFit",
                                  {
                                    NAME: "minmax",
                                    VAL: [
                                      CssJs.px(176),
                                      CssJs.fr(0.6)
                                    ]
                                  }
                                ]
                              }]),
                        CssJs.maxWidth(CssJs.px(800))
                      ])
                }, Belt_Array.mapWithIndex(connectors, (function (index, connector) {
                        return React.createElement("div", {
                                    key: String(index),
                                    className: CssJs.style([
                                          CssJs.zIndex(1),
                                          CssJs.border(CssJs.px(1), "solid", CssJs.rgba(195, 195, 195, {
                                                    NAME: "num",
                                                    VAL: 0.14
                                                  }))
                                        ]),
                                    onClick: (function (e) {
                                        e.stopPropagation();
                                        return Curry._1(activateConnector, connector.connector);
                                      })
                                  }, React.createElement("div", {
                                        className: CssJs.style([
                                              CssJs.margin(CssJs.px(8)),
                                              CssJs.display("flex"),
                                              CssJs.justifyContent("center"),
                                              CssJs.alignItems("center"),
                                              CssJs.flexDirection(CssJs.column),
                                              CssJs.cursor("pointer"),
                                              CssJs.borderRadius(CssJs.px(12)),
                                              CssJs.backgroundColor(CssJs.white),
                                              CssJs.hover([CssJs.backgroundColor(CssJs.rgb(195, 195, 195))]),
                                              CssJs.transition(200, 0, CssJs.easeInOut, "background-color")
                                            ])
                                      }, React.createElement("div", {
                                            className: Curry._1(Css.style, {
                                                  hd: Css.width(Css.px(45)),
                                                  tl: {
                                                    hd: Css.height(Css.px(45)),
                                                    tl: /* [] */0
                                                  }
                                                })
                                          }, React.createElement("img", {
                                                className: Curry._1(Css.style, {
                                                      hd: Css.width({
                                                            NAME: "percent",
                                                            VAL: 100
                                                          }),
                                                      tl: {
                                                        hd: Css.height({
                                                              NAME: "percent",
                                                              VAL: 100
                                                            }),
                                                        tl: /* [] */0
                                                      }
                                                    }),
                                                alt: connector.name,
                                                src: connector.img
                                              })), React.createElement("div", {
                                            className: Curry._1(Css.style, {
                                                  hd: Css.fontSize(Css.px(24)),
                                                  tl: {
                                                    hd: Css.fontWeight({
                                                          NAME: "num",
                                                          VAL: 700
                                                        }),
                                                    tl: {
                                                      hd: Css.marginTop(Css.em(0.5)),
                                                      tl: /* [] */0
                                                    }
                                                  }
                                                })
                                          }, connector.name), React.createElement("div", {
                                            className: Curry._1(Css.style, {
                                                  hd: Css.fontSize(Css.px(15)),
                                                  tl: {
                                                    hd: Css.marginTop(Css.em(0.35)),
                                                    tl: {
                                                      hd: Css.color(Css.rgb(169, 169, 188)),
                                                      tl: /* [] */0
                                                    }
                                                  }
                                                })
                                          }, connector.connectionPhrase)));
                      }))));
}

var make = Login;

export {
  ConnectorConfig ,
  connectors ,
  make ,
  
}
/* connectors Not a pure module */
