// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as ReactTranslate from "react-translate";

var TranslatorProvider = {};

var cryptoMuggleTranslations = {
      locale: "en",
      crypto: {
      },
      muggle: {
      }
    };

var translationContext = React.createContext({
      translationMode: "undefined",
      translationModeCrypto: false,
      setTranslationModeCrypto: (function (param) {
          
        })
    });

function makeProps(value, children, param) {
  return {
          value: value,
          children: children
        };
}

var make = translationContext.Provider;

var TranslationContext = {
  translationContext: translationContext,
  makeProps: makeProps,
  make: make
};

function useTranslationModeContext(param) {
  return React.useContext(translationContext);
}

function ReactTranslate$1(Props) {
  var children = Props.children;
  var match = React.useState(function () {
        return false;
      });
  var setTranslationModeCrypto = match[1];
  var translationModeCrypto = match[0];
  return React.createElement(ReactTranslate.TranslatorProvider, {
              children: React.createElement(make, makeProps({
                        translationMode: translationModeCrypto ? "crypto" : "muggle",
                        translationModeCrypto: translationModeCrypto,
                        setTranslationModeCrypto: (function (newMode) {
                            return Curry._1(setTranslationModeCrypto, (function (param) {
                                          return newMode;
                                        }));
                          })
                      }, children, undefined)),
              translations: cryptoMuggleTranslations
            });
}

var make$1 = ReactTranslate$1;

export {
  TranslatorProvider ,
  cryptoMuggleTranslations ,
  TranslationContext ,
  useTranslationModeContext ,
  make$1 as make,
  
}
/* translationContext Not a pure module */
