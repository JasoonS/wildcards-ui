// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Eth from "../../harberger-lib/Eth.bs.js";
import * as Ethers from "../../harberger-lib/eth/Ethers.bs.js";
import * as Belt_Float from "rescript/lib/es6/belt_Float.js";
import * as Web3Utils from "web3-utils";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_format from "rescript/lib/es6/caml_format.js";

function format(__x) {
  return __x.replace(/\d(?=(\d{3})+\.)/g, "$&,");
}

function formatFloat(digitsOpt, number) {
  var digits = digitsOpt !== undefined ? digitsOpt : 2;
  return format(number.toFixed(digits));
}

function toCentsFixedNoRounding(floatString) {
  return formatFloat(undefined, Number(floatString));
}

function formatEther(rawNumber) {
  var floatString = Ethers.Utils.formatEther(rawNumber);
  return formatFloat(undefined, Number(floatString));
}

function toFixedWithPrecisionNoTrailingZeros(number, digits) {
  return String(Caml_format.float_of_string(number.toFixed(digits)));
}

function toFixedWithPrecisionNoTrailingZerosEth(digitsOpt, eth) {
  var digits = digitsOpt !== undefined ? digitsOpt : 9;
  return toFixedWithPrecisionNoTrailingZeros(Belt_Option.getWithDefault(Belt_Float.fromString(Eth.fromWeiEth(eth)), 0), digits);
}

function getEthUnit(value, unit) {
  if (unit.TAG === /* Eth */0) {
    return Web3Utils.fromWei(value, Eth.ethUnitToJs(unit._0));
  } else {
    return toFixedWithPrecisionNoTrailingZeros(Number(Web3Utils.fromWei(value, Eth.ethUnitToJs("ether"))) * unit._0, unit._1);
  }
}

export {
  format ,
  formatFloat ,
  toCentsFixedNoRounding ,
  formatEther ,
  toFixedWithPrecisionNoTrailingZeros ,
  toFixedWithPrecisionNoTrailingZerosEth ,
  getEthUnit ,
}
/* Eth Not a pure module */
