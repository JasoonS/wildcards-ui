// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Css from "bs-css-emotion/src/Css.bs.js";
import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Partners from "./Partners.bs.js";
import * as CONSTANTS from "../../CONSTANTS.bs.js";
import * as RimbleUi from "rimble-ui";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as RootProvider from "../../harberger-lib/RootProvider.bs.js";
import * as Css_Legacy_Core from "bs-css/src/Css_Legacy_Core.bs.js";
import * as JsxPPXReactSupport from "rescript/lib/es6/jsxPPXReactSupport.js";

var blueBackground = CssJs.style([CssJs.backgroundColor({
            NAME: "hex",
            VAL: "73C8D7"
          })]);

var cardStyle = CssJs.style([
      CssJs.height({
            NAME: "percent",
            VAL: 100
          }),
      CssJs.display("flex"),
      CssJs.important(CssJs.padding({
                NAME: "percent",
                VAL: 0
              }))
    ]);

var logoStyle = CssJs.style([
      CssJs.margin({
            NAME: "percent",
            VAL: 10
          }),
      CssJs.width({
            NAME: "percent",
            VAL: 80
          })
    ]);

var corporatePartnerTextStyle = CssJs.style([
      CssJs.textAlign("center"),
      CssJs.marginBottom({
            NAME: "percent",
            VAL: 10
          })
    ]);

var viewMoreButton = CssJs.style([
      CssJs.margin(CssJs.auto),
      CssJs.display(CssJs.block)
    ]);

var viewMoreButtonContainer = CssJs.style([CssJs.width({
            NAME: "percent",
            VAL: 100
          })]);

var orgContainerStyles = CssJs.style([CssJs.width({
            NAME: "percent",
            VAL: 100
          })]);

function Organisations$OrgDetails(props) {
  var conservation = props.conservation;
  var clearAndPush = RootProvider.useClearNonUrlStateAndPushRoute(undefined);
  var id = conservation.id;
  return React.createElement(RimbleUi.Card, {
              className: cardStyle,
              children: React.createElement("a", {
                    className: Curry._1(Css.style, {
                          hd: Css.display("flex"),
                          tl: {
                            hd: Css.width({
                                  NAME: "percent",
                                  VAL: 100
                                }),
                            tl: {
                              hd: Css.height({
                                    NAME: "percent",
                                    VAL: 100
                                  }),
                              tl: /* [] */0
                            }
                          }
                        }),
                    onClick: (function (e) {
                        e.stopPropagation();
                        e.preventDefault();
                        Curry._1(clearAndPush, "#org/" + id);
                      })
                  }, React.createElement("img", {
                        className: Curry._1(Css.style, {
                              hd: Css.margin({
                                    NAME: "percent",
                                    VAL: 1
                                  }),
                              tl: {
                                hd: Css.objectFit("contain"),
                                tl: {
                                  hd: Css.width({
                                        NAME: "percent",
                                        VAL: 98
                                      }),
                                  tl: {
                                    hd: Css.justifyContent("center"),
                                    tl: {
                                      hd: Css.alignItems("center"),
                                      tl: {
                                        hd: Css.hover({
                                              hd: Css.filter({
                                                    hd: {
                                                      NAME: "saturate",
                                                      VAL: 150
                                                    },
                                                    tl: {
                                                      hd: {
                                                        NAME: "brightness",
                                                        VAL: 110
                                                      },
                                                      tl: /* [] */0
                                                    }
                                                  }),
                                              tl: {
                                                hd: Css.overflow(Css.visible),
                                                tl: {
                                                  hd: Css.boxShadow(Css_Legacy_Core.Shadow.box(undefined, undefined, Css.px(20), Css.px(20), undefined, Css.rgba(121, 181, 80, {
                                                                NAME: "num",
                                                                VAL: 0.5
                                                              }))),
                                                  tl: {
                                                    hd: Css.transform(Css.scale(1.01, 1.01)),
                                                    tl: {
                                                      hd: Css.transition(100, 0, Css.ease, "all"),
                                                      tl: /* [] */0
                                                    }
                                                  }
                                                }
                                              }
                                            }),
                                        tl: /* [] */0
                                      }
                                    }
                                  }
                                }
                              }
                            }),
                        alt: conservation.name,
                        src: CONSTANTS.cdnBase + conservation.logo
                      }))
            });
}

var OrgDetails = {
  make: Organisations$OrgDetails
};

function Organisations(props) {
  var newConservationPartners = Partners.usePartners(undefined);
  var orgBox = function (content, key) {
    return JsxPPXReactSupport.createElementWithKey(key, RimbleUi.Box, {
                mb: 20,
                mt: 20,
                children: content,
                width: [
                  0.45,
                  0.45,
                  0.18
                ],
                color: "black"
              });
  };
  return React.createElement("div", {
              width: "100%"
            }, React.createElement(RimbleUi.Flex, {
                  children: null,
                  flexWrap: "wrap",
                  alignItems: "stretch",
                  justifyContent: "space-around",
                  px: 50,
                  pt: 50
                }, React.createElement("h1", undefined, "Conservation Partners"), React.createElement(RimbleUi.Flex, {
                      children: newConservationPartners !== undefined ? React.createElement(React.Fragment, undefined, Belt_Array.map(newConservationPartners, (function (conservation) {
                                    return orgBox(React.createElement(Organisations$OrgDetails, {
                                                    conservation: conservation
                                                  }), conservation.id);
                                  })), orgBox(null, "a"), orgBox(null, "b"), orgBox(null, "c"), orgBox(null, "d")) : null,
                      flexWrap: "wrap",
                      alignItems: "stretch",
                      justifyContent: "space-evenly",
                      px: 50,
                      pb: 10,
                      className: orgContainerStyles
                    })));
}

var ubisoftLogo = "/img/logos/Ubisoft.png";

var ethCapeTownLogo = "/img/logos/EthCapeTown.png";

var cvLabsLogo = "/img/logos/cvlabszug.jpg";

var kernelLogo = "/img/logos/kernel.gif";

var make = Organisations;

export {
  ubisoftLogo ,
  ethCapeTownLogo ,
  cvLabsLogo ,
  kernelLogo ,
  blueBackground ,
  cardStyle ,
  logoStyle ,
  corporatePartnerTextStyle ,
  viewMoreButton ,
  viewMoreButtonContainer ,
  orgContainerStyles ,
  OrgDetails ,
  make ,
}
/* blueBackground Not a pure module */
