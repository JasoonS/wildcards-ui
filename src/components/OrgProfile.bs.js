// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/src/Cn.bs.js";
import * as Css from "bs-css-emotion/src/Css.bs.js";
import * as Eth from "../harberger-lib/Eth.bs.js";
import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Decco from "decco/src/Decco.bs.js";
import * as React from "react";
import * as Animal from "../harberger-lib/Animal.bs.js";
import * as Styles from "../Styles.bs.js";
import * as Countup from "./components/Countup.bs.js";
import * as Globals from "../harberger-lib/Globals.bs.js";
import * as QlHooks from "../harberger-lib/QlHooks.bs.js";
import * as TokenId from "../harberger-lib/TokenId.bs.js";
import * as CONSTANTS from "../CONSTANTS.bs.js";
import * as Web3Utils from "../harberger-lib/Web3Utils.bs.js";
import * as RimbleUi from "rimble-ui";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Belt_Result from "bs-platform/lib/es6/belt_Result.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as UserProfile from "./UserProfile.bs.js";
import * as UsdPriceProvider from "../harberger-lib/components/UsdPriceProvider.bs.js";
import ReactPhotoGallery from "react-photo-gallery";
import ReactResponsiveCarousel from "react-responsive-carousel";
import YoutubeVideoJs from "./StaticContent//YoutubeVideo.js";

function orgDescriptionArray_decode(v) {
  return Decco.arrayFromJson(Decco.stringFromJson, v);
}

var make = YoutubeVideoJs;

var YoutubeVid = {
  make: make
};

function OrgProfile$ComingSoonAnimal(Props) {
  var image = Props.image;
  var onClick = Props.onClick;
  return React.createElement("div", {
              className: Curry._1(Css.style, {
                    hd: Css.width({
                          NAME: "percent",
                          VAL: 32
                        }),
                    tl: /* [] */0
                  })
            }, React.createElement("img", {
                  className: Curry._1(Css.style, {
                        hd: Css.width({
                              NAME: "percent",
                              VAL: 100
                            }),
                        tl: /* [] */0
                      }),
                  src: image,
                  onClick: (function (_e) {
                      return Curry._1(onClick, undefined);
                    })
                }));
}

var ComingSoonAnimal = {
  make: OrgProfile$ComingSoonAnimal
};

function OrgProfile$ImageCarousel(Props) {
  var orgComingSoon = Props.orgComingSoon;
  var selectedIndex = Props.selectedIndex;
  return React.createElement(ReactResponsiveCarousel, {
              children: Belt_Array.mapWithIndex(orgComingSoon, (function (key, animal) {
                      return Belt_Option.mapWithDefault(Belt_Array.get(animal.real_wc_photos, 0), null, (function (photos) {
                                    return React.createElement("img", {
                                                key: String(key),
                                                src: CONSTANTS.cdnBase + photos.image
                                              });
                                  }));
                    })),
              showArrows: true,
              showStatus: true,
              showIndicators: true,
              infiniteLoop: true,
              showThumbs: false,
              useKeyboardArrows: true,
              autoPlay: true,
              stopOnHover: true,
              swipeable: true,
              dynamicHeight: true,
              emulateTouch: true,
              selectedItem: selectedIndex
            });
}

var ImageCarousel = {
  make: OrgProfile$ImageCarousel
};

function OrgProfile$ComingSoonModal(Props) {
  var selectedComingSoonAnimal = Props.selectedComingSoonAnimal;
  var setSelectedComingSoonAnimal = Props.setSelectedComingSoonAnimal;
  var orgComingSoon = Props.orgComingSoon;
  var match = React.useState(function () {
        
      });
  var setOpenImage = match[1];
  var openImage = match[0];
  var tmp;
  if (selectedComingSoonAnimal !== undefined) {
    if (openImage !== undefined) {
      tmp = React.createElement(OrgProfile$ImageCarousel, {
            orgComingSoon: orgComingSoon,
            selectedIndex: openImage
          });
    } else {
      var animal = orgComingSoon[selectedComingSoonAnimal];
      tmp = React.createElement("div", undefined, React.createElement("h3", {
                className: Curry._1(Css.style, {
                      hd: Css.textAlign(Css.center),
                      tl: /* [] */0
                    })
              }, Belt_Option.getWithDefault(animal.name, "Unnamed") + Belt_Option.mapWithDefault(animal.commonName, "", (function (commonName) {
                      return " - " + commonName;
                    }))), React.createElement(RimbleUi.Flex, {
                children: null,
                flexWrap: "wrap",
                alignItems: "start",
                alignContent: "space-around"
              }, React.createElement(RimbleUi.Box, {
                    children: React.createElement("div", {
                          className: Curry._1(Css.style, {
                                hd: Css.maxHeight({
                                      NAME: "em",
                                      VAL: 26
                                    }),
                                tl: {
                                  hd: Css.overflow("scroll"),
                                  tl: /* [] */0
                                }
                              })
                        }, Belt_Array.mapWithIndex(Belt_Result.getWithDefault(QlHooks.animalDescription_decode(animal.description), []), (function (i, paragraphText) {
                                return React.createElement("p", {
                                            key: String(i)
                                          }, paragraphText);
                              }))),
                    width: [
                      1,
                      1,
                      0.49
                    ],
                    className: Curry._1(Css.style, {
                          hd: Css.textAlign("center"),
                          tl: {
                            hd: Css.alignSelf(Css.center),
                            tl: {
                              hd: Css.padding(Css.em(0.5)),
                              tl: /* [] */0
                            }
                          }
                        })
                  }), React.createElement(RimbleUi.Box, {
                    children: React.createElement("div", {
                          className: Curry._1(Css.style, {
                                hd: Css.maxHeight({
                                      NAME: "vh",
                                      VAL: 80
                                    }),
                                tl: /* [] */0
                              })
                        }, React.createElement(ReactPhotoGallery, {
                              photos: Belt_Array.map(animal.real_wc_photos, (function (photo) {
                                      return {
                                              src: CONSTANTS.cdnBase + photo.image,
                                              width: 4,
                                              height: 3
                                            };
                                    })),
                              targetRowHeight: 30,
                              onClick: (function (param, photoData) {
                                  return Curry._1(setOpenImage, (function (param) {
                                                return photoData.index;
                                              }));
                                })
                            })),
                    width: [
                      1,
                      1,
                      0.45
                    ],
                    className: Curry._1(Css.style, {
                          hd: Css.textAlign("center"),
                          tl: {
                            hd: Css.alignSelf(Css.center),
                            tl: {
                              hd: Css.padding(Css.em(2)),
                              tl: /* [] */0
                            }
                          }
                        })
                  })));
    }
  } else {
    tmp = null;
  }
  return React.createElement(RimbleUi.Modal, {
              isOpen: Belt_Option.isSome(selectedComingSoonAnimal),
              children: React.createElement(RimbleUi.Card, {
                    width: {
                      TAG: /* AnyStr */0,
                      _0: "80vw"
                    },
                    p: 0,
                    children: null
                  }, React.createElement(RimbleUi.Button.Text, {
                        onClick: (function (param) {
                            if (openImage !== undefined) {
                              return Curry._1(setOpenImage, (function (param) {
                                            
                                          }));
                            } else {
                              return Curry._1(setSelectedComingSoonAnimal, (function (param) {
                                            
                                          }));
                            }
                          }),
                        icononly: true,
                        icon: "Close",
                        color: "moon-gray",
                        position: "absolute",
                        top: 0,
                        right: 0,
                        m: 1
                      }), React.createElement(RimbleUi.Box, {
                        p: 1,
                        mb: 1,
                        children: tmp
                      }))
            });
}

var ComingSoonModal = {
  make: OrgProfile$ComingSoonModal
};

function stringToArray(str) {
  return Array.from(str);
}

function toDollarCentsFixedNoRounding(aFloat) {
  return Belt_Option.getWithDefault(Caml_option.null_to_opt(String(aFloat).match(/^\d+[.]\d\d/g)), [""])[0];
}

function OrgProfile$AmountRaised(Props) {
  var mainnetEth = Props.mainnetEth;
  var maticDai = Props.maticDai;
  var currentUsdEthPrice = UsdPriceProvider.useUsdPrice(undefined);
  var match = React.useState(function () {
        return [];
      });
  var setPrevUsdRaisedStrArray = match[1];
  var prevUsdRaisedStrArray = match[0];
  var match$1 = React.useState(function () {
        return [
                "",
                "",
                "",
                ""
              ];
      });
  var setRaisedDisplay = match$1[1];
  var match$2 = match$1[0];
  var raisedSubChanged = match$2[3];
  var usdRaisedFloat = Belt_Option.mapWithDefault(currentUsdEthPrice, 0, (function (usdEthRate) {
          return Eth.getFloat(mainnetEth, {
                      TAG: /* Usd */1,
                      _0: usdEthRate,
                      _1: 2
                    });
        })) + Eth.getFloat(maticDai, {
        TAG: /* Eth */0,
        _0: "ether"
      });
  var usdRaisedStr = usdRaisedFloat.toFixed(6);
  var usdRaised2Precision = toDollarCentsFixedNoRounding(usdRaisedFloat);
  React.useEffect((function () {
          var usdRaisedDigitArray = Array.from(usdRaisedStr);
          var indexOfTheFirstChangedDigit = usdRaisedDigitArray.findIndex(function (newDigit, index) {
                var digit = Belt_Array.get(prevUsdRaisedStrArray, index);
                if (digit !== undefined) {
                  return digit !== newDigit;
                } else {
                  return false;
                }
              });
          var match = usdRaised2Precision.length;
          if (indexOfTheFirstChangedDigit < 0) {
            Curry._1(setRaisedDisplay, (function (param) {
                    return [
                            usdRaised2Precision,
                            "",
                            usdRaisedStr.slice(match),
                            ""
                          ];
                  }));
          } else if (indexOfTheFirstChangedDigit > match) {
            Curry._1(setRaisedDisplay, (function (param) {
                    return [
                            usdRaised2Precision,
                            "",
                            usdRaisedStr.slice(match, indexOfTheFirstChangedDigit),
                            usdRaisedStr.slice(indexOfTheFirstChangedDigit)
                          ];
                  }));
          } else {
            Curry._1(setRaisedDisplay, (function (param) {
                    return [
                            usdRaised2Precision.slice(0, indexOfTheFirstChangedDigit),
                            usdRaised2Precision.slice(indexOfTheFirstChangedDigit),
                            "",
                            usdRaisedStr.slice(match)
                          ];
                  }));
          }
          Curry._1(setPrevUsdRaisedStrArray, (function (param) {
                  return usdRaisedDigitArray;
                }));
          
        }), [usdRaisedStr]);
  var explainerString = Web3Utils.fromWeiBNToEthPrecision(mainnetEth, 4) + (" ETH + " + (Web3Utils.fromWeiBNToEthPrecision(maticDai, 2) + " DAI"));
  var styleOnCountUp = Curry._1(Css.style, {
        hd: Css.color(Css.green),
        tl: {
          hd: Css.fontWeight("bold"),
          tl: /* [] */0
        }
      });
  var tmp = raisedSubChanged === "" ? null : React.createElement(Countup.StringFloat.make, {
          stringFloat: raisedSubChanged,
          styleOnCountUp: styleOnCountUp
        });
  return React.createElement(React.Fragment, undefined, React.createElement("p", undefined, React.createElement("span", undefined, match$2[0]), React.createElement(Countup.StringFloat.make, {
                      stringFloat: match$2[1],
                      styleOnCountUp: styleOnCountUp
                    }), React.createElement("span", {
                      className: CssJs.style([CssJs.fontSize(CssJs.em(0.75))])
                    }, React.createElement("span", undefined, match$2[2]), tmp), React.createElement("br", undefined), React.createElement("small", undefined, explainerString)));
}

var AmountRaised = {
  make: OrgProfile$AmountRaised
};

function OrgProfile$OrgPage(Props) {
  var orgData = Props.orgData;
  var orgId = Props.orgId;
  var orgName = orgData.name;
  var orgDescription = Decco.arrayFromJson(Decco.stringFromJson, orgData.description);
  var orgAnimals = orgData.wildcard;
  var orgComingSoon = orgData.unlaunched;
  var match = React.useState(function () {
        
      });
  var setSelectedComingSoonAnimal = match[1];
  var orgAnimalsArray = Belt_Array.map(orgAnimals, (function (animal) {
          return Belt_Option.getWithDefault(animal.id, TokenId.makeFromInt(99999));
        }));
  var match$1 = QlHooks.useTotalRaisedAnimalGroup(orgAnimalsArray);
  var totalCollectMaticDai = match$1[1];
  var totalCollectedMainnetEth = match$1[0];
  var orgWebsite = orgData.website;
  var optOrgYoutubeVid = orgData.youtube_vid;
  var orgImage = Animal.useGetOrgImage(orgId);
  var tmp;
  tmp = orgDescription.TAG === /* Ok */0 ? Belt_Array.mapWithIndex(orgDescription._0, (function (i, paragraphText) {
            return React.createElement("p", {
                        key: String(i)
                      }, paragraphText);
          })) : React.createElement("p", undefined, Globals.restr("error loading description"));
  return React.createElement("div", undefined, React.createElement(OrgProfile$ComingSoonModal, {
                  selectedComingSoonAnimal: match[0],
                  setSelectedComingSoonAnimal: setSelectedComingSoonAnimal,
                  orgComingSoon: orgComingSoon
                }), React.createElement("div", {
                  className: Curry._1(Css.style, {
                        hd: Css.width({
                              NAME: "percent",
                              VAL: 100
                            }),
                        tl: /* [] */0
                      })
                }, React.createElement(RimbleUi.Flex, {
                      children: null,
                      flexWrap: "wrap",
                      alignItems: "start",
                      alignContent: "space-arround"
                    }, React.createElement(RimbleUi.Box, {
                          children: null,
                          width: [
                            1,
                            1,
                            0.3333
                          ],
                          className: Curry._1(Css.style, {
                                hd: Css.textAlign("center"),
                                tl: {
                                  hd: Css.alignSelf(Css.center),
                                  tl: {
                                    hd: Css.padding(Css.em(2)),
                                    tl: /* [] */0
                                  }
                                }
                              })
                        }, React.createElement("a", {
                              className: Cn.fromList({
                                    hd: Styles.navListText,
                                    tl: {
                                      hd: Curry._1(Css.style, {
                                            hd: Css.fontSize(Css.em(3)),
                                            tl: /* [] */0
                                          }),
                                      tl: /* [] */0
                                    }
                                  }),
                              href: orgWebsite,
                              rel: "noopener noreferrer",
                              target: "_blank"
                            }, React.createElement("img", {
                                  className: Curry._1(Css.style, {
                                        hd: Css.width({
                                              NAME: "vh",
                                              VAL: 25
                                            }),
                                        tl: {
                                          hd: Css.height({
                                                NAME: "vh",
                                                VAL: 25
                                              }),
                                          tl: {
                                            hd: Css.objectFit("contain"),
                                            tl: /* [] */0
                                          }
                                        }
                                      }),
                                  src: orgImage
                                })), React.createElement("br", undefined), React.createElement("a", {
                              className: Cn.fromList({
                                    hd: Styles.navListText,
                                    tl: {
                                      hd: Curry._1(Css.style, {
                                            hd: Css.fontSize(Css.em(3)),
                                            tl: /* [] */0
                                          }),
                                      tl: /* [] */0
                                    }
                                  }),
                              href: orgWebsite,
                              rel: "noopener noreferrer",
                              target: "_blank"
                            }, Globals.restr(orgName)), React.createElement("br", undefined), React.createElement("div", {
                              className: Curry._1(Css.style, {
                                    hd: Css.maxHeight({
                                          NAME: "em",
                                          VAL: 15
                                        }),
                                    tl: {
                                      hd: Css.overflowY("auto"),
                                      tl: {
                                        hd: Css.overflowX("hidden"),
                                        tl: {
                                          hd: Css.backgroundColor(Css.rgb(250, 250, 250)),
                                          tl: {
                                            hd: Css.borderRadius(Css.em(0.8)),
                                            tl: /* [] */0
                                          }
                                        }
                                      }
                                    }
                                  })
                            }, tmp), React.createElement("br", undefined)), React.createElement(RimbleUi.Box, {
                          children: null,
                          width: [
                            1,
                            1,
                            0.3333
                          ],
                          className: Curry._1(Css.style, {
                                hd: Css.alignSelf(Css.center),
                                tl: {
                                  hd: Css.padding(Css.em(2)),
                                  tl: /* [] */0
                                }
                              })
                        }, optOrgYoutubeVid !== undefined ? React.createElement(make, {
                                videoCode: optOrgYoutubeVid
                              }) : null, React.createElement("h2", undefined, Globals.restr("Total Raised")), totalCollectedMainnetEth !== undefined && totalCollectMaticDai !== undefined ? React.createElement(OrgProfile$AmountRaised, {
                                mainnetEth: Caml_option.valFromOption(totalCollectedMainnetEth),
                                maticDai: Caml_option.valFromOption(totalCollectMaticDai)
                              }) : "Loading"), React.createElement(RimbleUi.Box, {
                          children: null,
                          width: [
                            1,
                            1,
                            0.3333
                          ],
                          className: Curry._1(Css.style, {
                                hd: Css.alignSelf(Css.center),
                                tl: {
                                  hd: Css.padding(Css.em(2)),
                                  tl: /* [] */0
                                }
                              })
                        }, orgAnimals.length !== 0 ? React.createElement(React.Fragment, {
                                children: null
                              }, React.createElement(RimbleUi.Heading, {
                                    children: "Organisations animals"
                                  }), React.createElement(RimbleUi.Flex, {
                                    children: Belt_Array.map(orgAnimals, (function (animal) {
                                            var tokenId = Belt_Option.getWithDefault(animal.id, TokenId.makeFromInt(99999));
                                            return React.createElement(UserProfile.Token.make, {
                                                        tokenId: tokenId,
                                                        key: TokenId.toString(tokenId)
                                                      });
                                          })),
                                    flexWrap: "wrap",
                                    className: UserProfile.centreAlignOnMobile
                                  })) : React.createElement("p", undefined, "This organisation doesn't have any wildcards yet"), orgComingSoon.length !== 0 ? React.createElement(React.Fragment, {
                                children: null
                              }, React.createElement(RimbleUi.Heading, {
                                    children: "Coming soon"
                                  }), React.createElement(RimbleUi.Flex, {
                                    children: null,
                                    flexWrap: "wrap",
                                    className: UserProfile.centreAlignOnMobile
                                  }, null, Belt_Array.mapWithIndex(orgComingSoon, (function (key, animal) {
                                          return Belt_Option.mapWithDefault(Belt_Array.get(animal.real_wc_photos, 0), null, (function (photos) {
                                                        return React.createElement(OrgProfile$ComingSoonAnimal, {
                                                                    image: CONSTANTS.cdnBase + photos.image,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(setSelectedComingSoonAnimal, (function (param) {
                                                                                      return key;
                                                                                    }));
                                                                      }),
                                                                    key: String(key)
                                                                  });
                                                      }));
                                        })))) : null))));
}

var OrgPage = {
  make: OrgProfile$OrgPage
};

function OrgProfile(Props) {
  var orgId = Props.orgId;
  var orgData = QlHooks.useLoadOrganisationQuery(orgId);
  return React.createElement(RimbleUi.Flex, {
              children: orgData !== undefined ? React.createElement(OrgProfile$OrgPage, {
                      orgData: orgData,
                      orgId: orgId
                    }) : React.createElement("div", undefined, React.createElement(RimbleUi.Heading, {
                          children: "Loading Organisation Profile"
                        }), React.createElement(RimbleUi.Loader, {})),
              flexWrap: "wrap",
              alignItems: "center",
              className: Styles.topBody
            });
}

var make$1 = OrgProfile;

export {
  orgDescriptionArray_decode ,
  YoutubeVid ,
  ComingSoonAnimal ,
  ImageCarousel ,
  ComingSoonModal ,
  stringToArray ,
  toDollarCentsFixedNoRounding ,
  AmountRaised ,
  OrgPage ,
  make$1 as make,
  
}
/* make Not a pure module */
