// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Css from "bs-css-emotion/src/Css.bs.js";
import * as Eth from "../harberger-lib/Eth.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Helper from "../harberger-lib/Helper.bs.js";
import * as Styles from "../Styles.bs.js";
import * as Blockie from "../harberger-lib/bindings/ethereum-blockies-base64/Blockie.bs.js";
import * as Globals from "../harberger-lib/Globals.bs.js";
import * as Js_dict from "bs-platform/lib/es6/js_dict.js";
import * as QlHooks from "../harberger-lib/QlHooks.bs.js";
import * as TokenId from "../harberger-lib/TokenId.bs.js";
import * as CONSTANTS from "../CONSTANTS.bs.js";
import * as Web3Utils from "../harberger-lib/Web3Utils.bs.js";
import BadWords from "bad-words";
import * as RimbleUi from "rimble-ui";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as OrgProfile from "./OrgProfile.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as UserProfile from "./UserProfile.bs.js";
import * as RootProvider from "../harberger-lib/RootProvider.bs.js";
import * as UserProvider from "../harberger-lib/js/user-provider/UserProvider.bs.js";
import * as UsdPriceProvider from "../harberger-lib/components/UsdPriceProvider.bs.js";
import * as LazyThreeBoxUpdate from "./LazyThreeBoxUpdate.bs.js";

var centreAlignOnMobile = Curry._1(Css.style, {
      hd: Css.media("(max-width: 831px)", {
            hd: Css.alignItems(Css.center),
            tl: {
              hd: Css.justifyContent(Css.center),
              tl: /* [] */0
            }
          }),
      tl: /* [] */0
    });

function ArtistProfiles$ArtistDetails(Props) {
  var optArtistEthAddress = Props.optArtistEthAddress;
  var optArtistName = Props.optArtistName;
  var optArtistWebsite = Props.optArtistWebsite;
  var optArtistLaunchedWildcards = Props.optArtistLaunchedWildcards;
  var optArtistUnlaunchedWildcards = Props.optArtistUnlaunchedWildcards;
  var optArtistOrgs = Props.optArtistOrgs;
  var clearAndPush = RootProvider.useClearNonUrlStateAndPushRoute(undefined);
  var artistEthAddress = Belt_Option.getWithDefault(optArtistEthAddress, CONSTANTS.nullEthAddress).toLowerCase();
  var userInfoContext = UserProvider.useUserInfoContext(undefined);
  Curry._2(userInfoContext.update, artistEthAddress, false);
  var optThreeBoxData = UserProvider.use3BoxUserData(artistEthAddress);
  var optProfile = Belt_Option.flatMap(optThreeBoxData, (function (a) {
          return a.profile;
        }));
  var image = Belt_Option.mapWithDefault(Belt_Option.flatMap(Belt_Option.map(Belt_Option.flatMap(Belt_Option.flatMap(optProfile, (function (a) {
                          return a.image;
                        })), (function (img) {
                      return Belt_Array.get(img, 0);
                    })), (function (a) {
                  return a.contentUrl;
                })), (function (content) {
              return Js_dict.get(content, "/");
            })), Blockie.makeBlockie(artistEthAddress), (function (hash) {
          return "https://ipfs.infura.io/ipfs/" + hash;
        }));
  var optName = Belt_Option.flatMap(optProfile, (function (a) {
          return a.name;
        }));
  var optDescription = Belt_Option.flatMap(optProfile, (function (a) {
          return a.description;
        }));
  var optTwitter = Belt_Option.map(Belt_Option.flatMap(Belt_Option.flatMap(optThreeBoxData, (function (a) {
                  return a.verifications;
                })), (function (a) {
              return a.twitter;
            })), (function (a) {
          return a.username;
        }));
  var etherScanUrl = RootProvider.useEtherscanUrl(undefined);
  var artistsAnimalsArrayLaunched = Belt_Option.mapWithDefault(optArtistLaunchedWildcards, [], (function (tokens) {
          return Belt_Array.map(tokens, (function (token) {
                        return TokenId.fromStringUnsafe(Belt_Option.getWithDefault(token.id, "_"));
                      }));
        }));
  var currentUsdEthPrice = UsdPriceProvider.useUsdPrice(undefined);
  var match = QlHooks.useTotalRaisedAnimalGroup(artistsAnimalsArrayLaunched);
  var totalCollectMaticDai = match[1];
  var totalCollectedMainnetEth = match[0];
  var match$1;
  if (totalCollectedMainnetEth !== undefined && totalCollectMaticDai !== undefined) {
    var maticDai = Caml_option.valFromOption(totalCollectMaticDai);
    var mainnetEth = Caml_option.valFromOption(totalCollectedMainnetEth);
    match$1 = [
      (Belt_Option.mapWithDefault(currentUsdEthPrice, 0, (function (usdEthRate) {
                  return Eth.getFloat(mainnetEth, {
                              TAG: /* Usd */1,
                              _0: usdEthRate,
                              _1: 2
                            });
                })) + Eth.getFloat(maticDai, {
                TAG: /* Eth */0,
                _0: "ether"
              })).toFixed(6),
      Web3Utils.fromWeiBNToEthPrecision(mainnetEth, 4) + (" ETH + " + (Web3Utils.fromWeiBNToEthPrecision(maticDai, 2) + " DAI"))
    ];
  } else {
    match$1 = [
      "loading",
      "loading"
    ];
  }
  var nonUrlState = RootProvider.useNonUrlState(undefined);
  var clearNonUrlState = RootProvider.useClearNonUrlState(undefined);
  var tmp;
  var exit = 0;
  if (typeof nonUrlState === "number" && nonUrlState === 0) {
    tmp = React.createElement("div", {
          className: Curry._1(Css.style, {
                hd: Css.position("relative"),
                tl: /* [] */0
              })
        }, React.createElement(RimbleUi.Button.Text, {
              onClick: (function (param) {
                  return Curry._1(clearNonUrlState, undefined);
                }),
              icononly: true,
              icon: "Close",
              color: "moon-gray",
              position: "absolute",
              top: 0,
              right: 0,
              m: 1
            }), React.createElement(React.Suspense, {
              children: React.createElement(LazyThreeBoxUpdate.make, LazyThreeBoxUpdate.makeProps(undefined, undefined)),
              fallback: React.createElement(RimbleUi.Loader, {})
            }));
  } else {
    exit = 1;
  }
  if (exit === 1) {
    tmp = React.createElement(React.Fragment, undefined, React.createElement("h2", undefined, Belt_Option.getWithDefault(optName, Belt_Option.getWithDefault(optArtistName, "Loading artist name"))), Globals.reactMap(optTwitter, (function (twitterHandle) {
                return React.createElement("a", {
                            className: Styles.navListText,
                            href: "https://twitter.com/" + twitterHandle,
                            rel: "noopener noreferrer",
                            target: "_blank"
                          }, "@" + twitterHandle);
              })), React.createElement("br", undefined), Globals.reactMap(optDescription, (function (description) {
                return React.createElement("p", undefined, new BadWords().clean(description));
              })), Belt_Option.mapWithDefault(optArtistWebsite, null, (function (website) {
                return React.createElement("a", {
                            className: Styles.navListText,
                            href: website,
                            rel: "noopener noreferrer",
                            target: "_blank"
                          }, Belt_Option.getWithDefault(optArtistName, "Artist") + "'s website");
              })), React.createElement("br", undefined), React.createElement("br", undefined), Globals.reactMap(optArtistEthAddress, (function (param) {
                return React.createElement(React.Fragment, undefined, React.createElement("a", {
                                className: Styles.navListText,
                                href: "https://" + (etherScanUrl + ("/address/" + artistEthAddress)),
                                rel: "noopener noreferrer",
                                target: "_blank"
                              }, Helper.elipsify(artistEthAddress, 10)), React.createElement("br", undefined));
              })));
  }
  return React.createElement("div", {
              className: Curry._1(Css.style, {
                    hd: Css.width({
                          NAME: "percent",
                          VAL: 100
                        }),
                    tl: /* [] */0
                  })
            }, React.createElement(RimbleUi.Flex, {
                  children: null,
                  flexWrap: "wrap",
                  alignItems: "start"
                }, React.createElement(RimbleUi.Box, {
                      p: 1,
                      children: null,
                      width: [
                        1,
                        1,
                        0.3333
                      ],
                      className: Curry._1(Css.style, {
                            hd: Css.textAlign("center"),
                            tl: /* [] */0
                          })
                    }, Globals.reactMap(optArtistEthAddress, (function (param) {
                            return React.createElement(React.Fragment, undefined, React.createElement("img", {
                                            className: Curry._1(Css.style, {
                                                  hd: Css.borderRadius({
                                                        NAME: "percent",
                                                        VAL: 100
                                                      }),
                                                  tl: {
                                                    hd: Css.width({
                                                          NAME: "vh",
                                                          VAL: 25
                                                        }),
                                                    tl: {
                                                      hd: Css.height({
                                                            NAME: "vh",
                                                            VAL: 25
                                                          }),
                                                      tl: {
                                                        hd: Css.objectFit("cover"),
                                                        tl: /* [] */0
                                                      }
                                                    }
                                                  }
                                                }),
                                            src: image
                                          }), React.createElement("br", undefined));
                          })), tmp), React.createElement(RimbleUi.Box, {
                      p: 1,
                      children: null,
                      width: [
                        1,
                        1,
                        0.3333
                      ]
                    }, React.createElement("h2", undefined, "Total contributed by artist"), match$1[0] + "USD", React.createElement("br", undefined), React.createElement("small", undefined, match$1[1]), optArtistOrgs !== undefined ? (
                        optArtistOrgs.length !== 0 ? React.createElement(React.Fragment, undefined, React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("h4", undefined, "Organisations this artist has contributed to:"), Belt_Array.map(optArtistOrgs, (function (org) {
                                      return React.createElement("div", {
                                                  className: Curry._1(Css.style, {
                                                        hd: Css.width(Css.vh(12)),
                                                        tl: {
                                                          hd: Css.cursor("pointer"),
                                                          tl: /* [] */0
                                                        }
                                                      })
                                                }, React.createElement("img", {
                                                      className: Curry._1(Css.style, {
                                                            hd: Css.width({
                                                                  NAME: "percent",
                                                                  VAL: 100
                                                                }),
                                                            tl: /* [] */0
                                                          }),
                                                      src: CONSTANTS.cdnBase + org.logo,
                                                      onClick: (function (_e) {
                                                          return Curry._1(clearAndPush, "/#org/" + org.id);
                                                        })
                                                    }));
                                    }))) : null
                      ) : React.createElement("h2", undefined, "Loading orgs")), React.createElement(RimbleUi.Box, {
                      p: 1,
                      children: null,
                      width: [
                        1,
                        1,
                        0.3333
                      ]
                    }, optArtistLaunchedWildcards !== undefined ? (
                        optArtistLaunchedWildcards.length !== 0 ? React.createElement(React.Fragment, {
                                children: null
                              }, React.createElement(RimbleUi.Heading, {
                                    children: "Wildcards created by artist"
                                  }), React.createElement(RimbleUi.Flex, {
                                    children: Belt_Array.map(artistsAnimalsArrayLaunched, (function (token) {
                                            var id = TokenId.toString(token);
                                            return React.createElement(UserProfile.Token.make, {
                                                        tokenId: token,
                                                        key: id
                                                      });
                                          })),
                                    flexWrap: "wrap",
                                    className: centreAlignOnMobile
                                  }), React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("br", undefined)) : React.createElement("p", undefined, "Artist doesn't have any launched wildcards")
                      ) : React.createElement("p", undefined, "loading artists wildcards"), optArtistUnlaunchedWildcards !== undefined && optArtistUnlaunchedWildcards.length !== 0 ? React.createElement(React.Fragment, {
                            children: null
                          }, React.createElement(RimbleUi.Heading, {
                                children: "Coming soon"
                              }), React.createElement(RimbleUi.Flex, {
                                children: Belt_Array.map(optArtistUnlaunchedWildcards, (function (token) {
                                        return Belt_Option.mapWithDefault(token.image, null, (function (image) {
                                                      return React.createElement(OrgProfile.ComingSoonAnimal.make, {
                                                                  image: CONSTANTS.cdnBase + image,
                                                                  onClick: (function (param) {
                                                                      
                                                                    }),
                                                                  key: String(token.key)
                                                                });
                                                    }));
                                      })),
                                flexWrap: "wrap",
                                className: centreAlignOnMobile
                              })) : null)));
}

var ArtistDetails = {
  make: ArtistProfiles$ArtistDetails
};

function ArtistProfiles(Props) {
  var artistIdentifier = Props.artistIdentifier;
  var optArtistEthAddress = QlHooks.useArtistEthAddress(artistIdentifier);
  var optArtistName = QlHooks.useArtistName(artistIdentifier);
  var optArtistWebsite = QlHooks.useArtistWebsite(artistIdentifier);
  var optArtistLaunchedWildcards = QlHooks.useArtistLaunchedWildcards(artistIdentifier);
  var optArtistUnlaunchedWildcards = QlHooks.useArtistUnlaunchedWildcards(artistIdentifier);
  var optArtistOrgs = QlHooks.useArtistOrgs(artistIdentifier);
  return React.createElement(RimbleUi.Flex, {
              children: React.createElement(ArtistProfiles$ArtistDetails, {
                    optArtistEthAddress: optArtistEthAddress,
                    optArtistName: optArtistName,
                    optArtistWebsite: optArtistWebsite,
                    optArtistLaunchedWildcards: optArtistLaunchedWildcards,
                    optArtistUnlaunchedWildcards: optArtistUnlaunchedWildcards,
                    optArtistOrgs: optArtistOrgs
                  }),
              flexWrap: "wrap",
              alignItems: "center",
              className: Styles.topBody
            });
}

var make = ArtistProfiles;

export {
  centreAlignOnMobile ,
  ArtistDetails ,
  make ,
  
}
/* centreAlignOnMobile Not a pure module */
